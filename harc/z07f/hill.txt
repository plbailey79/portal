// hill.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"

#include <stdlib.h>
#include <string.h>

#pragma warning(disable: 4996)  // Disable (nonstandard) "deprecated" warning
#pragma warning(disable: 4267)  // Disable (nonstandard) int len=strlen(str) warning

#define LINLEN 60

int mulinv[26] =
{ 0, 1, 0, 9, 0, 21, 0, 15, 0, 3, 0, 19, 0, 0,
  0, 7, 0, 23, 0, 11, 0, 5, 0, 17, 0, 25 };

int matdet(int* M)
{ int d=(M[0]*M[3] - M[1]*M[2])%26;
  if (d<0) d+=26;
  return d; }

void matvec(int* M,int* v,int* w)
{ w[0] = (M[0]*v[0] + M[1]*v[1])%26;
  w[1] = (M[2]*v[0] + M[3]*v[1])%26; }

int matinv(int* M)
{ int e=mulinv[matdet(M)];
  if (e)
  { int N[4];
    N[0] = M[0]; N[1]=M[1]; N[2]=M[2]; N[3]= M[3];
    M[0] = (e*N[3])%26;
    M[1] = (e*(26-N[1]))%26;
    M[2] = (e*(26-N[2]))%26;
    M[3] = (e*N[0])%26; }
  else
  { M[0]=1; M[1]=0; M[2]=0; M[3]=1; } 
  return e; }

void keymat(int key,int* M)
{ M[0]=(key/1000000)%26; M[1]=((key%1000000)/10000)%26;
  M[2]=((key%10000)/100)%26; M[3]=(key%100)%26; }

int keywas(int* M)
{ return (M[0]%26)*1000000 + (M[1]%26)*10000 + (M[2]%26)*100 + (M[3]%26); }

int keymak(char* str)
{ int key=atoi(str);
  int s=0;
  int M[4];
  if (key<=0) { key=-key; s=1; }
  keymat(key,M);
  if (s) matinv(M);
  if (mulinv[matdet(M)]==0)
  { printf("Invalid key, det: %d\n",matdet(M)); exit(1); }
  return keywas(M); }

char chrupr(char chr)
{ if (chr >= 'a' && chr <= 'z') return chr-'a'+'A';
  if (chr >= 'A' && chr <= 'Z') return chr;
  return 0; }

int getvec(FILE* ori,int* v)
{ int ch1,ch2;
  while (1)
  { ch1 = fgetc(ori);
    if (ch1 == EOF) return 0;
    if (!(ch1=chrupr(ch1))) continue;
    while (1)
    { ch2 = fgetc(ori);
      if (ch2 == EOF) { ch2='A'; break; }
      if (!(ch2=chrupr(ch2))) continue;
      break; }
    break; }
  v[0]=ch1-'A';
  v[1]=ch2-'A';
  return 1; }

void putvec(FILE* trg,int* w)
{ fputc(w[0]+'A',trg);
  fputc(w[1]+'A',trg); }

void hill(FILE *ori,FILE *trg,int key)
{ int ctr=0;
  int M[4];
  int v[2];
  int w[2];
  keymat(key,M);
  while (getvec(ori,v))
  { matvec(M,v,w);
    putvec(trg,w);
    if ((ctr+=2)%LINLEN==0) fputc('\n',trg); }
  if (ctr%LINLEN) fputc('\n',trg); }

int main(int argc, char* argv[])
{ FILE *ori,*trg;
  int key;
  if (argc<4)
  { printf("HILL <ori file> <targ file> <key>\n");
    return 0; }
  ori = fopen(argv[1],"rb");
  if (!ori)
  { printf("Unable to open ori file %s\n",argv[1]);
    return 1; }
  trg = fopen(argv[2],"wb");
  if (!trg)
  { printf("Unable to open trg file %s\n",argv[2]);
    fclose(ori);
    return 2; }
  key=keymak(argv[3]);
  printf("key: %d\n",key);
  hill(ori,trg,key);
  fclose(trg);
  fclose(ori);
	return 0; }
