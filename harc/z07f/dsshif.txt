// dsshif.cpp : displays cryptanalysis for shift cipher

#include "stdafx.h"

#include <stdlib.h>
#include <string.h>

#pragma warning(disable: 4996)  // Disable (nonstandard) "deprecated" warning
#pragma warning(disable: 4267)  // Disable (nonstandard) int len=strlen(str) warning

char chrupr(char chr)
{ if (chr >= 'a' && chr <= 'z') return chr-'a'+'A';
  if (chr >= 'A' && chr <= 'Z') return chr;
  return 0; }

void strshf(char* buf,char* cry,int key)
{ char chr;
  while (chr=*buf++)
  { *cry++=(((chr-'A')+key)%26)+'A'; }
  *cry=0; }

void dsshif(FILE *ori)
{ int chr;
  int ctr=0,key=0;
  char buf[72],cry[72];
  while (ctr<35)
  { chr = fgetc(ori);
    if (chr == EOF) break;
    if (chr =  chrupr(chr)) 
    { buf[ctr++]=chr; } }
  buf[ctr]=0;
  while (key<26)
  { strshf(buf,cry,key);
    printf("%2d %s",key,cry);
    if (key%2)  printf("\n");
    else        printf("   ");
    key++; } }

int main(int argc, char* argv[])
{ FILE *ori;
  if (argc<2)
  { printf("DSSHIF <ori file>\n");
    return 0; }
  ori = fopen(argv[1],"rb");
  if (!ori)
  { printf("Unable to open ori file %s\n",argv[1]);
    exit(1); }
  dsshif(ori);
  fclose(ori);
	return 0; }
