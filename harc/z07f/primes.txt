// primes.cpp : Defines the entry point for the console application.
//

#include "stdio.h"
#include "memory.h"
#include "conio.h"

#pragma warning(disable: 4996)

#define MAXTOP (1<<24)

typedef unsigned __int64 UNX;
typedef unsigned __int32 UNT;
typedef unsigned __int16 UNS;
typedef unsigned __int8  BYT;
typedef unsigned __int8  BIT;
typedef char* STR;

typedef union
{ UNS uns[2];
  UNT unt;
} UNN;

class Primer
{ 
private:
  UNT*  pri;
  UNT   cnt;
  BIT*  siv;
  UNT   sze;

public:

  Primer(void);
  Primer(UNT top);
  ~Primer(void);

  UNT   operator[](UNT k);

  UNT   Count(void) { return cnt; }
  UNT   Top(void)   { if (sze) return sze*2-1; return 0; }
  void  Clear(void);
  void  Generate(UNT t);
  void  List(void);
    
private:
  void  mark(UNT i);
};

Primer::Primer(void)
{ pri=0;
  cnt=0;
  siv=0;
  sze=0; }

Primer::Primer(UNT top)
{ pri=0;
  cnt=0;
  siv=0;
  sze=0;
  Generate(top); }

Primer::~Primer(void)
{ if (pri) delete pri;
  if (siv) delete siv; }

UNT Primer::operator [](UNT k)
{ if (k<cnt) return pri[k];
  return 0; }

void Primer::Clear(void)
{ if (pri) delete pri;
  if (siv) delete siv;
  pri=0;
  cnt=0;
  siv=0;
  sze=0; }

void Primer::Generate(UNT t)
{ if (t > MAXTOP) return;
  Clear();
  if (t<2) return;
  sze=(t-1)/2;
  siv = new BIT[sze];        // siv[i] = 0 if 2i+3 is prime
  memset(siv,0,sze*sizeof(BIT));
  UNT i=0,k=0;
  for (i=0; i<sze; i++)
  { if (siv[i]) continue;
    mark(i); 
    k++; }
  pri = new UNT[k+2];
  k=0;
  pri[k++]=2;
  for (i=0; i<sze; i++)
  { if (siv[i]) continue;
    pri[k++]=i+i+3; }
  pri[k]=0; // NULL-terminated
  cnt=k; }

void Primer::List(void)
{ char chr;
  UNT k=0;
  size_t c=0,d=0;
  for (k=0; k<cnt; k++)
  { if (c) c+=printf(", ");
    c+=printf("%u",pri[k]);
    if (c>64) 
    { printf(", \n"); c=0;
      if (++d%23==0)
      { printf(" > "); 
        chr=getch(); 
        printf("\n"); 
        if (chr=='.') return; } } }
  printf(".\n");  }

void Primer::mark(UNT i)
{ UNT j=0,p=i+i+3;
  for (j=p+i; j<sze; j+=p)
  { siv[j]=1; } }

Primer primer(65000);

int main(int argc, char* argv[])
{
  primer.List();
  return 0;
}
